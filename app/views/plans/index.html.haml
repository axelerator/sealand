%p#notice= notice
- content_for(:sidebar) do
  = link_to 'New Workshop', new_workshop_path, :class => 'btn btn-primary'
  = link_to 'New Plan', new_plan_path, :class => 'btn'
  = render "shared/list_plans"

#map{"style"=>"height:600px; width: 100%;"}

- locations = @workshops.map{|bar| [bar.lng, bar.lat]}.to_json
- matlocations = @materials.map{|mat| mat.locations.map{|loc| [loc.longitude, loc.latitude]}}.to_json

:javascript
  var locations = #{locations};
  var matlocations = #{matlocations};
  var map, layer;
  function init(){
    OpenLayers.ProxyHost="/proxy/?url=";
    map = new OpenLayers.Map('map');
    layer = new OpenLayers.Layer.WMS( "OpenLayers WMS",
        "http://vmap0.tiles.osgeo.org/wms/vmap0", {layers: 'basic'} );

    map.addLayer(layer);
    map.setCenter(new OpenLayers.LonLat(0, 0), 0);

    var workshopsMarker = new OpenLayers.Layer.Markers( "Workshops" );
    var materialsMarker = new OpenLayers.Layer.Markers( "Marerials" );
    map.addLayer(workshopsMarker);
    map.addLayer(materialsMarker);

    var size = new OpenLayers.Size(21,25);
    var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
    locations.forEach( function(x,i) {
      var icon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker-blue.png',size,offset);
      workshopsMarker.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(x[0], x[1]) ,icon));
    });

    var size = new OpenLayers.Size(16,20);
    var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
    matlocations.forEach( function(locations,i) {
      locations.forEach( function(location,i) {
        var icon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker-gold.png',size,offset);
        materialsMarker.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(location[0], location[1]) ,icon));
      });
    });
    
    map.addControl(new OpenLayers.Control.LayerSwitcher());
    map.addControl(new OpenLayers.Control.MousePosition({'prefix':'Longitude: ','separator':'<br/>Latitude: &nbsp; ','numDigits':3}));
    map.zoomToMaxExtent();
  }
